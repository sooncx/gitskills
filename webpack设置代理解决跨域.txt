项目目录下有config目录
首先打开webpack的配置文件webpack.config.js，找到devServer节点.
默认是这样的
 devServer: {
    clientLogLevel: 'warning',
    historyApiFallback: {
      rewrites: [
        { from: /.*/, to: path.posix.join(config.dev.assetsPublicPath, 'index.html') },
      ],
    },
    hot: true,
    contentBase: false, // since we use CopyWebpackPlugin.
    compress: true,
    host: HOST || config.dev.host,
    port: PORT || config.dev.port,
    open: config.dev.autoOpenBrowser,
    overlay: config.dev.errorOverlay
      ? { warnings: false, errors: true }
      : false,
    publicPath: config.dev.assetsPublicPath,
    proxy: config.dev.proxyTable,
    quiet: true, // necessary for FriendlyErrorsPlugin
    watchOptions: {
      poll: config.dev.poll,
    }
  },
找到proxy属性
这里proxy是这样的
proxy: config.dev.proxyTable,


打开congig/index.js
设置dev.proxyTable为如下
module.exports = {
  dev: {
    // Paths
    assetsSubDirectory: 'static',
    assetsPublicPath: '/',
    proxyTable: {
      '/api': {
        target: 'http://121.41.130.58:9090', //设置你调用的接口域名和端口号 别忘了加http
        changeOrigin: true,
        pathRewrite: {
          '^/api': '' //这里理解成用‘/api’代替target里面的地址，后面组件中我们掉接口时直接用api代替 比如我要调用'http://40.00.100.100:3002/user/add'，直接写‘/api/user/add’即可
        }
      }
    },
    ......
    ......
  }

若没有config文件夹，则直接在webpack.config.js下设置proxy的值为如下
首先打开webpack的配置文件webpack.config.js，找到devServer节点，添加proxy属性即可。

完成是这个样子：

  devServer: {
    historyApiFallback: true,
    hot: true,
    inline: true,
    stats: { colors: true },
    // prot:8080,
    proxy: {
      '/api': {
        target: 'http://localhost:8081',
        pathRewrite: { '^/api': '/api' },
        changeOrigin: true
      },
      '/163': {
        target: 'http://music.163.com',
        pathRewrite: { '^/163': '' },
        changeOrigin: true
      }
    }
再看看请求的代码：

      var url
      // url = 'http://music.163.com/api/playlist/detail?id=37880978'
      // url='http://localhost:8081/api/playlist/19723756'
      url = '/api/playlist/19723756'
      // url = '/163/api/playlist/detail?id=37880978'
      Axios.get(url)
        .then(function(response) {
          console.log(response);
        })
        .catch(function(error) {
          console.log(233);
        });
      // console.log(1);
    }
我配置了两个代理

所有url为/api开头的都会被代理成http://localhost:8081/api/...
所有url为/163开头的都会被代理成http://music.163.com/api/...
区别：
两个代理的区别在于pathRewrite，这里可以理解成这样：
首先匹配到指定的开头（/163）
替换url：'http://music.163.com' + url.replace(/^\/163/,'')
特别提醒：
修改完一定要重启！
修改完一定要重启！
修改完一定要重启！